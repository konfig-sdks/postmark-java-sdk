/*
 * Postmark API
 * Postmark makes sending and receiving email incredibly easy. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Attachment;
import com.konfigthis.client.model.EmailWithTemplateRequest;
import com.konfigthis.client.model.MessageHeader;
import com.konfigthis.client.model.SendEmailRequest;
import com.konfigthis.client.model.SendEmailResponse;
import com.konfigthis.client.model.SendEmailTemplatedBatchRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SendingApiApi
 */
@Disabled
public class SendingApiApiTest {

    private static SendingApiApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new SendingApiApi(apiClient);
    }

    /**
     * Send a batch of emails
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendBatchEmailsTest() throws ApiException {
        List<SendEmailResponse> response = api.sendBatchEmails()
                .execute();
        // TODO: test validations
    }

    /**
     * Send a batch of email using templates.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendBatchWithTemplatesTest() throws ApiException {
        List<EmailWithTemplateRequest> messages = null;
        List<SendEmailResponse> response = api.sendBatchWithTemplates()
                .messages(messages)
                .execute();
        // TODO: test validations
    }

    /**
     * Send an email using a Template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendEmailTemplateTest() throws ApiException {
        String from = null;
        String templateAlias = null;
        Integer templateId = null;
        Object templateModel = null;
        String to = null;
        List<Attachment> attachments = null;
        String bcc = null;
        String cc = null;
        List<MessageHeader> headers = null;
        Boolean inlineCss = null;
        String replyTo = null;
        String tag = null;
        String trackLinks = null;
        Boolean trackOpens = null;
        SendEmailResponse response = api.sendEmailTemplate(from, templateAlias, templateId, templateModel, to)
                .attachments(attachments)
                .bcc(bcc)
                .cc(cc)
                .headers(headers)
                .inlineCss(inlineCss)
                .replyTo(replyTo)
                .tag(tag)
                .trackLinks(trackLinks)
                .trackOpens(trackOpens)
                .execute();
        // TODO: test validations
    }

    /**
     * Send a single email
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendSingleEmailTest() throws ApiException {
        List<Attachment> attachments = null;
        String bcc = null;
        String cc = null;
        String from = null;
        List<MessageHeader> headers = null;
        String htmlBody = null;
        String replyTo = null;
        String subject = null;
        String tag = null;
        String textBody = null;
        String to = null;
        String trackLinks = null;
        Boolean trackOpens = null;
        SendEmailResponse response = api.sendSingleEmail()
                .attachments(attachments)
                .bcc(bcc)
                .cc(cc)
                .from(from)
                .headers(headers)
                .htmlBody(htmlBody)
                .replyTo(replyTo)
                .subject(subject)
                .tag(tag)
                .textBody(textBody)
                .to(to)
                .trackLinks(trackLinks)
                .trackOpens(trackOpens)
                .execute();
        // TODO: test validations
    }

}
